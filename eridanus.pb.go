// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.3
// source: eridanus.proto

package eridanus

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ParseResultType int32

const (
	ParseResultType_TAG     ParseResultType = 0
	ParseResultType_CONTENT ParseResultType = 1
	ParseResultType_FOLLOW  ParseResultType = 2
	ParseResultType_SOURCE  ParseResultType = 3
	ParseResultType_MD5SUM  ParseResultType = 4
	ParseResultType_NEXT    ParseResultType = 5
)

// Enum value maps for ParseResultType.
var (
	ParseResultType_name = map[int32]string{
		0: "TAG",
		1: "CONTENT",
		2: "FOLLOW",
		3: "SOURCE",
		4: "MD5SUM",
		5: "NEXT",
	}
	ParseResultType_value = map[string]int32{
		"TAG":     0,
		"CONTENT": 1,
		"FOLLOW":  2,
		"SOURCE":  3,
		"MD5SUM":  4,
		"NEXT":    5,
	}
)

func (x ParseResultType) Enum() *ParseResultType {
	p := new(ParseResultType)
	*p = x
	return p
}

func (x ParseResultType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParseResultType) Descriptor() protoreflect.EnumDescriptor {
	return file_eridanus_proto_enumTypes[0].Descriptor()
}

func (ParseResultType) Type() protoreflect.EnumType {
	return &file_eridanus_proto_enumTypes[0]
}

func (x ParseResultType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParseResultType.Descriptor instead.
func (ParseResultType) EnumDescriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{0}
}

type StringMatcher_MatcherType int32

const (
	StringMatcher_EXACT StringMatcher_MatcherType = 0
	StringMatcher_REGEX StringMatcher_MatcherType = 1
)

// Enum value maps for StringMatcher_MatcherType.
var (
	StringMatcher_MatcherType_name = map[int32]string{
		0: "EXACT",
		1: "REGEX",
	}
	StringMatcher_MatcherType_value = map[string]int32{
		"EXACT": 0,
		"REGEX": 1,
	}
)

func (x StringMatcher_MatcherType) Enum() *StringMatcher_MatcherType {
	p := new(StringMatcher_MatcherType)
	*p = x
	return p
}

func (x StringMatcher_MatcherType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StringMatcher_MatcherType) Descriptor() protoreflect.EnumDescriptor {
	return file_eridanus_proto_enumTypes[1].Descriptor()
}

func (StringMatcher_MatcherType) Type() protoreflect.EnumType {
	return &file_eridanus_proto_enumTypes[1]
}

func (x StringMatcher_MatcherType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StringMatcher_MatcherType.Descriptor instead.
func (StringMatcher_MatcherType) EnumDescriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{1, 0}
}

type URLClass_Class int32

const (
	URLClass_FILE   URLClass_Class = 0 // Treated as a CONTENT result would be.
	URLClass_POST   URLClass_Class = 1 // Only act on TAG and CONTENT results.
	URLClass_LIST   URLClass_Class = 2 // Only act on FOLLOW results.
	URLClass_IGNORE URLClass_Class = 15
)

// Enum value maps for URLClass_Class.
var (
	URLClass_Class_name = map[int32]string{
		0:  "FILE",
		1:  "POST",
		2:  "LIST",
		15: "IGNORE",
	}
	URLClass_Class_value = map[string]int32{
		"FILE":   0,
		"POST":   1,
		"LIST":   2,
		"IGNORE": 15,
	}
)

func (x URLClass_Class) Enum() *URLClass_Class {
	p := new(URLClass_Class)
	*p = x
	return p
}

func (x URLClass_Class) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (URLClass_Class) Descriptor() protoreflect.EnumDescriptor {
	return file_eridanus_proto_enumTypes[2].Descriptor()
}

func (URLClass_Class) Type() protoreflect.EnumType {
	return &file_eridanus_proto_enumTypes[2]
}

func (x URLClass_Class) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use URLClass_Class.Descriptor instead.
func (URLClass_Class) EnumDescriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{2, 0}
}

type Parser_Operation_OpType int32

const (
	Parser_Operation_VALUE  Parser_Operation_OpType = 0
	Parser_Operation_XPATH  Parser_Operation_OpType = 1 // https://devhints.io/xpath
	Parser_Operation_REGEX  Parser_Operation_OpType = 2
	Parser_Operation_PREFIX Parser_Operation_OpType = 3
	Parser_Operation_SUFFIX Parser_Operation_OpType = 4
)

// Enum value maps for Parser_Operation_OpType.
var (
	Parser_Operation_OpType_name = map[int32]string{
		0: "VALUE",
		1: "XPATH",
		2: "REGEX",
		3: "PREFIX",
		4: "SUFFIX",
	}
	Parser_Operation_OpType_value = map[string]int32{
		"VALUE":  0,
		"XPATH":  1,
		"REGEX":  2,
		"PREFIX": 3,
		"SUFFIX": 4,
	}
)

func (x Parser_Operation_OpType) Enum() *Parser_Operation_OpType {
	p := new(Parser_Operation_OpType)
	*p = x
	return p
}

func (x Parser_Operation_OpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Parser_Operation_OpType) Descriptor() protoreflect.EnumDescriptor {
	return file_eridanus_proto_enumTypes[3].Descriptor()
}

func (Parser_Operation_OpType) Type() protoreflect.EnumType {
	return &file_eridanus_proto_enumTypes[3]
}

func (x Parser_Operation_OpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Parser_Operation_OpType.Descriptor instead.
func (Parser_Operation_OpType) EnumDescriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{3, 0, 0}
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd  string            `protobuf:"bytes,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Data []string          `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	Kv   map[string]string `protobuf:"bytes,3,rep,name=kv,proto3" json:"kv,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eridanus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_eridanus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{0}
}

func (x *Command) GetCmd() string {
	if x != nil {
		return x.Cmd
	}
	return ""
}

func (x *Command) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Command) GetKv() map[string]string {
	if x != nil {
		return x.Kv
	}
	return nil
}

type StringMatcher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   string                    `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Type    StringMatcher_MatcherType `protobuf:"varint,2,opt,name=type,proto3,enum=com.github.scytrin.eridanus.StringMatcher_MatcherType" json:"type,omitempty"`
	Default string                    `protobuf:"bytes,3,opt,name=default,proto3" json:"default,omitempty"`
}

func (x *StringMatcher) Reset() {
	*x = StringMatcher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eridanus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMatcher) ProtoMessage() {}

func (x *StringMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_eridanus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringMatcher.ProtoReflect.Descriptor instead.
func (*StringMatcher) Descriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{1}
}

func (x *StringMatcher) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *StringMatcher) GetType() StringMatcher_MatcherType {
	if x != nil {
		return x.Type
	}
	return StringMatcher_EXACT
}

func (x *StringMatcher) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

type URLClass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Class          URLClass_Class            `protobuf:"varint,2,opt,name=class,proto3,enum=com.github.scytrin.eridanus.URLClass_Class" json:"class,omitempty"`
	Priority       uint64                    `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	Domain         string                    `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	Path           []*StringMatcher          `protobuf:"bytes,5,rep,name=path,proto3" json:"path,omitempty"`
	Query          map[string]*StringMatcher `protobuf:"bytes,6,rep,name=query,proto3" json:"query,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AllowHttp      bool                      `protobuf:"varint,7,opt,name=allow_http,json=allowHttp,proto3" json:"allow_http,omitempty"`
	MatchSubdomain bool                      `protobuf:"varint,9,opt,name=match_subdomain,json=matchSubdomain,proto3" json:"match_subdomain,omitempty"` // if true, matches subdomains
	AllowSubdomain bool                      `protobuf:"varint,8,opt,name=allow_subdomain,json=allowSubdomain,proto3" json:"allow_subdomain,omitempty"` // if true, won't alter hostname in normalization
}

func (x *URLClass) Reset() {
	*x = URLClass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eridanus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLClass) ProtoMessage() {}

func (x *URLClass) ProtoReflect() protoreflect.Message {
	mi := &file_eridanus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLClass.ProtoReflect.Descriptor instead.
func (*URLClass) Descriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{2}
}

func (x *URLClass) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *URLClass) GetClass() URLClass_Class {
	if x != nil {
		return x.Class
	}
	return URLClass_FILE
}

func (x *URLClass) GetPriority() uint64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *URLClass) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *URLClass) GetPath() []*StringMatcher {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *URLClass) GetQuery() map[string]*StringMatcher {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *URLClass) GetAllowHttp() bool {
	if x != nil {
		return x.AllowHttp
	}
	return false
}

func (x *URLClass) GetMatchSubdomain() bool {
	if x != nil {
		return x.MatchSubdomain
	}
	return false
}

func (x *URLClass) GetAllowSubdomain() bool {
	if x != nil {
		return x.AllowSubdomain
	}
	return false
}

type Parser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type       ParseResultType     `protobuf:"varint,2,opt,name=type,proto3,enum=com.github.scytrin.eridanus.ParseResultType" json:"type,omitempty"`
	Operations []*Parser_Operation `protobuf:"bytes,4,rep,name=operations,proto3" json:"operations,omitempty"`
	Urls       []string            `protobuf:"bytes,3,rep,name=urls,proto3" json:"urls,omitempty"`
}

func (x *Parser) Reset() {
	*x = Parser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eridanus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parser) ProtoMessage() {}

func (x *Parser) ProtoReflect() protoreflect.Message {
	mi := &file_eridanus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parser.ProtoReflect.Descriptor instead.
func (*Parser) Descriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{3}
}

func (x *Parser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Parser) GetType() ParseResultType {
	if x != nil {
		return x.Type
	}
	return ParseResultType_TAG
}

func (x *Parser) GetOperations() []*Parser_Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *Parser) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

type ParseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   ParseResultType `protobuf:"varint,1,opt,name=type,proto3,enum=com.github.scytrin.eridanus.ParseResultType" json:"type,omitempty"`
	Value  []string        `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
	Parser string          `protobuf:"bytes,3,opt,name=parser,proto3" json:"parser,omitempty"`
	Uclass string          `protobuf:"bytes,4,opt,name=uclass,proto3" json:"uclass,omitempty"`
}

func (x *ParseResult) Reset() {
	*x = ParseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eridanus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseResult) ProtoMessage() {}

func (x *ParseResult) ProtoReflect() protoreflect.Message {
	mi := &file_eridanus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseResult.ProtoReflect.Descriptor instead.
func (*ParseResult) Descriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{4}
}

func (x *ParseResult) GetType() ParseResultType {
	if x != nil {
		return x.Type
	}
	return ParseResultType_TAG
}

func (x *ParseResult) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ParseResult) GetParser() string {
	if x != nil {
		return x.Parser
	}
	return ""
}

func (x *ParseResult) GetUclass() string {
	if x != nil {
		return x.Uclass
	}
	return ""
}

type ParseResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*ParseResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *ParseResults) Reset() {
	*x = ParseResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eridanus_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseResults) ProtoMessage() {}

func (x *ParseResults) ProtoReflect() protoreflect.Message {
	mi := &file_eridanus_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseResults.ProtoReflect.Descriptor instead.
func (*ParseResults) Descriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{5}
}

func (x *ParseResults) GetResults() []*ParseResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type Parser_Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string                  `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Type  Parser_Operation_OpType `protobuf:"varint,2,opt,name=type,proto3,enum=com.github.scytrin.eridanus.Parser_Operation_OpType" json:"type,omitempty"`
}

func (x *Parser_Operation) Reset() {
	*x = Parser_Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eridanus_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parser_Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parser_Operation) ProtoMessage() {}

func (x *Parser_Operation) ProtoReflect() protoreflect.Message {
	mi := &file_eridanus_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parser_Operation.ProtoReflect.Descriptor instead.
func (*Parser_Operation) Descriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{3, 0}
}

func (x *Parser_Operation) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Parser_Operation) GetType() Parser_Operation_OpType {
	if x != nil {
		return x.Type
	}
	return Parser_Operation_VALUE
}

var File_eridanus_proto protoreflect.FileDescriptor

var file_eridanus_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x79,
	0x74, 0x72, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75, 0x73, 0x22, 0xa4, 0x01,
	0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x3c, 0x0a, 0x02, 0x6b, 0x76, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x79, 0x74, 0x72, 0x69, 0x6e,
	0x2e, 0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x2e, 0x4b, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x02, 0x6b, 0x76, 0x1a, 0x35, 0x0a,
	0x07, 0x4b, 0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xb0, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4a, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x79, 0x74, 0x72, 0x69, 0x6e, 0x2e,
	0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x22, 0x23, 0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x58, 0x41, 0x43, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x52, 0x45, 0x47, 0x45, 0x58, 0x10, 0x01, 0x22, 0xa7, 0x04, 0x0a, 0x08, 0x55, 0x52, 0x4c, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x79, 0x74, 0x72, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69,
	0x64, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x55, 0x52, 0x4c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70,
	0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x3e, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x79, 0x74, 0x72,
	0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x46, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x79, 0x74,
	0x72, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x55, 0x52, 0x4c,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x68, 0x74, 0x74, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x6c, 0x6c,
	0x6f, 0x77, 0x48, 0x74, 0x74, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f,
	0x73, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x53,
	0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x1a, 0x64, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x40, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x79, 0x74, 0x72, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69,
	0x64, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x31,
	0x0a, 0x05, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49, 0x4c, 0x45, 0x10,
	0x00, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x4f, 0x53, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4c,
	0x49, 0x53, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x47, 0x4e, 0x4f, 0x52, 0x45, 0x10,
	0x0f, 0x22, 0xf2, 0x02, 0x0a, 0x06, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x40, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x79, 0x74,
	0x72, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x79, 0x74, 0x72, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69, 0x64,
	0x61, 0x6e, 0x75, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x72, 0x6c, 0x73, 0x1a, 0xae, 0x01, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x79, 0x74, 0x72, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69,
	0x64, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x41, 0x0a, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a,
	0x05, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x58, 0x50, 0x41, 0x54,
	0x48, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x47, 0x45, 0x58, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x50, 0x52, 0x45, 0x46, 0x49, 0x58, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x55,
	0x46, 0x46, 0x49, 0x58, 0x10, 0x04, 0x22, 0x95, 0x01, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x40, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x73, 0x63, 0x79, 0x74, 0x72, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69, 0x64, 0x61, 0x6e,
	0x75, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x52,
	0x0a, 0x0c, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x42,
	0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x79,
	0x74, 0x72, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x50, 0x61,
	0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x2a, 0x55, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x41, 0x47, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46,
	0x4f, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x44, 0x35, 0x53, 0x55, 0x4d, 0x10, 0x04, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x45, 0x58, 0x54, 0x10, 0x05, 0x42, 0x1d, 0x5a, 0x1b, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x63, 0x79, 0x74, 0x72, 0x69, 0x6e, 0x2f,
	0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eridanus_proto_rawDescOnce sync.Once
	file_eridanus_proto_rawDescData = file_eridanus_proto_rawDesc
)

func file_eridanus_proto_rawDescGZIP() []byte {
	file_eridanus_proto_rawDescOnce.Do(func() {
		file_eridanus_proto_rawDescData = protoimpl.X.CompressGZIP(file_eridanus_proto_rawDescData)
	})
	return file_eridanus_proto_rawDescData
}

var file_eridanus_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_eridanus_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_eridanus_proto_goTypes = []interface{}{
	(ParseResultType)(0),           // 0: com.github.scytrin.eridanus.ParseResultType
	(StringMatcher_MatcherType)(0), // 1: com.github.scytrin.eridanus.StringMatcher.MatcherType
	(URLClass_Class)(0),            // 2: com.github.scytrin.eridanus.URLClass.Class
	(Parser_Operation_OpType)(0),   // 3: com.github.scytrin.eridanus.Parser.Operation.OpType
	(*Command)(nil),                // 4: com.github.scytrin.eridanus.Command
	(*StringMatcher)(nil),          // 5: com.github.scytrin.eridanus.StringMatcher
	(*URLClass)(nil),               // 6: com.github.scytrin.eridanus.URLClass
	(*Parser)(nil),                 // 7: com.github.scytrin.eridanus.Parser
	(*ParseResult)(nil),            // 8: com.github.scytrin.eridanus.ParseResult
	(*ParseResults)(nil),           // 9: com.github.scytrin.eridanus.ParseResults
	nil,                            // 10: com.github.scytrin.eridanus.Command.KvEntry
	nil,                            // 11: com.github.scytrin.eridanus.URLClass.QueryEntry
	(*Parser_Operation)(nil),       // 12: com.github.scytrin.eridanus.Parser.Operation
}
var file_eridanus_proto_depIdxs = []int32{
	10, // 0: com.github.scytrin.eridanus.Command.kv:type_name -> com.github.scytrin.eridanus.Command.KvEntry
	1,  // 1: com.github.scytrin.eridanus.StringMatcher.type:type_name -> com.github.scytrin.eridanus.StringMatcher.MatcherType
	2,  // 2: com.github.scytrin.eridanus.URLClass.class:type_name -> com.github.scytrin.eridanus.URLClass.Class
	5,  // 3: com.github.scytrin.eridanus.URLClass.path:type_name -> com.github.scytrin.eridanus.StringMatcher
	11, // 4: com.github.scytrin.eridanus.URLClass.query:type_name -> com.github.scytrin.eridanus.URLClass.QueryEntry
	0,  // 5: com.github.scytrin.eridanus.Parser.type:type_name -> com.github.scytrin.eridanus.ParseResultType
	12, // 6: com.github.scytrin.eridanus.Parser.operations:type_name -> com.github.scytrin.eridanus.Parser.Operation
	0,  // 7: com.github.scytrin.eridanus.ParseResult.type:type_name -> com.github.scytrin.eridanus.ParseResultType
	8,  // 8: com.github.scytrin.eridanus.ParseResults.results:type_name -> com.github.scytrin.eridanus.ParseResult
	5,  // 9: com.github.scytrin.eridanus.URLClass.QueryEntry.value:type_name -> com.github.scytrin.eridanus.StringMatcher
	3,  // 10: com.github.scytrin.eridanus.Parser.Operation.type:type_name -> com.github.scytrin.eridanus.Parser.Operation.OpType
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_eridanus_proto_init() }
func file_eridanus_proto_init() {
	if File_eridanus_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eridanus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eridanus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringMatcher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eridanus_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLClass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eridanus_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eridanus_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eridanus_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eridanus_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parser_Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eridanus_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eridanus_proto_goTypes,
		DependencyIndexes: file_eridanus_proto_depIdxs,
		EnumInfos:         file_eridanus_proto_enumTypes,
		MessageInfos:      file_eridanus_proto_msgTypes,
	}.Build()
	File_eridanus_proto = out.File
	file_eridanus_proto_rawDesc = nil
	file_eridanus_proto_goTypes = nil
	file_eridanus_proto_depIdxs = nil
}
