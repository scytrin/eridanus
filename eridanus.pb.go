// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.3
// source: eridanus.proto

package eridanus

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MatcherType int32

const (
	MatcherType_EXACT MatcherType = 0
	MatcherType_REGEX MatcherType = 1
)

// Enum value maps for MatcherType.
var (
	MatcherType_name = map[int32]string{
		0: "EXACT",
		1: "REGEX",
	}
	MatcherType_value = map[string]int32{
		"EXACT": 0,
		"REGEX": 1,
	}
)

func (x MatcherType) Enum() *MatcherType {
	p := new(MatcherType)
	*p = x
	return p
}

func (x MatcherType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MatcherType) Descriptor() protoreflect.EnumDescriptor {
	return file_eridanus_proto_enumTypes[0].Descriptor()
}

func (MatcherType) Type() protoreflect.EnumType {
	return &file_eridanus_proto_enumTypes[0]
}

func (x MatcherType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MatcherType.Descriptor instead.
func (MatcherType) EnumDescriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{0}
}

type URLClassifier_URLClass int32

const (
	URLClassifier_FILE  URLClassifier_URLClass = 0
	URLClassifier_POST  URLClassifier_URLClass = 1
	URLClassifier_LIST  URLClassifier_URLClass = 2
	URLClassifier_WATCH URLClassifier_URLClass = 3
)

// Enum value maps for URLClassifier_URLClass.
var (
	URLClassifier_URLClass_name = map[int32]string{
		0: "FILE",
		1: "POST",
		2: "LIST",
		3: "WATCH",
	}
	URLClassifier_URLClass_value = map[string]int32{
		"FILE":  0,
		"POST":  1,
		"LIST":  2,
		"WATCH": 3,
	}
)

func (x URLClassifier_URLClass) Enum() *URLClassifier_URLClass {
	p := new(URLClassifier_URLClass)
	*p = x
	return p
}

func (x URLClassifier_URLClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (URLClassifier_URLClass) Descriptor() protoreflect.EnumDescriptor {
	return file_eridanus_proto_enumTypes[1].Descriptor()
}

func (URLClassifier_URLClass) Type() protoreflect.EnumType {
	return &file_eridanus_proto_enumTypes[1]
}

func (x URLClassifier_URLClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use URLClassifier_URLClass.Descriptor instead.
func (URLClassifier_URLClass) EnumDescriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{3, 0}
}

type Parser_ResultType int32

const (
	Parser_TAG     Parser_ResultType = 0
	Parser_CONTENT Parser_ResultType = 1
	Parser_FOLLOW  Parser_ResultType = 2
	Parser_SOURCE  Parser_ResultType = 3
	Parser_MD5SUM  Parser_ResultType = 4
)

// Enum value maps for Parser_ResultType.
var (
	Parser_ResultType_name = map[int32]string{
		0: "TAG",
		1: "CONTENT",
		2: "FOLLOW",
		3: "SOURCE",
		4: "MD5SUM",
	}
	Parser_ResultType_value = map[string]int32{
		"TAG":     0,
		"CONTENT": 1,
		"FOLLOW":  2,
		"SOURCE":  3,
		"MD5SUM":  4,
	}
)

func (x Parser_ResultType) Enum() *Parser_ResultType {
	p := new(Parser_ResultType)
	*p = x
	return p
}

func (x Parser_ResultType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Parser_ResultType) Descriptor() protoreflect.EnumDescriptor {
	return file_eridanus_proto_enumTypes[2].Descriptor()
}

func (Parser_ResultType) Type() protoreflect.EnumType {
	return &file_eridanus_proto_enumTypes[2]
}

func (x Parser_ResultType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Parser_ResultType.Descriptor instead.
func (Parser_ResultType) EnumDescriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{4, 0}
}

type Parser_Operation_OpType int32

const (
	Parser_Operation_XPATH  Parser_Operation_OpType = 0
	Parser_Operation_REGEX  Parser_Operation_OpType = 1
	Parser_Operation_PREFIX Parser_Operation_OpType = 2
	Parser_Operation_SUFFIX Parser_Operation_OpType = 3
)

// Enum value maps for Parser_Operation_OpType.
var (
	Parser_Operation_OpType_name = map[int32]string{
		0: "XPATH",
		1: "REGEX",
		2: "PREFIX",
		3: "SUFFIX",
	}
	Parser_Operation_OpType_value = map[string]int32{
		"XPATH":  0,
		"REGEX":  1,
		"PREFIX": 2,
		"SUFFIX": 3,
	}
)

func (x Parser_Operation_OpType) Enum() *Parser_Operation_OpType {
	p := new(Parser_Operation_OpType)
	*p = x
	return p
}

func (x Parser_Operation_OpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Parser_Operation_OpType) Descriptor() protoreflect.EnumDescriptor {
	return file_eridanus_proto_enumTypes[3].Descriptor()
}

func (Parser_Operation_OpType) Type() protoreflect.EnumType {
	return &file_eridanus_proto_enumTypes[3]
}

func (x Parser_Operation_OpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Parser_Operation_OpType.Descriptor instead.
func (Parser_Operation_OpType) EnumDescriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{4, 0, 0}
}

type PBConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalData string           `protobuf:"bytes,1,opt,name=local_data,json=localData,proto3" json:"local_data,omitempty"`
	Parsers   []*Parser        `protobuf:"bytes,2,rep,name=parsers,proto3" json:"parsers,omitempty"`
	Classes   []*URLClassifier `protobuf:"bytes,3,rep,name=classes,proto3" json:"classes,omitempty"`
}

func (x *PBConfig) Reset() {
	*x = PBConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eridanus_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBConfig) ProtoMessage() {}

func (x *PBConfig) ProtoReflect() protoreflect.Message {
	mi := &file_eridanus_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBConfig.ProtoReflect.Descriptor instead.
func (*PBConfig) Descriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{0}
}

func (x *PBConfig) GetLocalData() string {
	if x != nil {
		return x.LocalData
	}
	return ""
}

func (x *PBConfig) GetParsers() []*Parser {
	if x != nil {
		return x.Parsers
	}
	return nil
}

func (x *PBConfig) GetClasses() []*URLClassifier {
	if x != nil {
		return x.Classes
	}
	return nil
}

type StringMatcher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   string      `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Type    MatcherType `protobuf:"varint,2,opt,name=type,proto3,enum=com.github.scytrin.eridanus.MatcherType" json:"type,omitempty"`
	Default string      `protobuf:"bytes,3,opt,name=default,proto3" json:"default,omitempty"`
}

func (x *StringMatcher) Reset() {
	*x = StringMatcher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eridanus_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringMatcher) ProtoMessage() {}

func (x *StringMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_eridanus_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringMatcher.ProtoReflect.Descriptor instead.
func (*StringMatcher) Descriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{1}
}

func (x *StringMatcher) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *StringMatcher) GetType() MatcherType {
	if x != nil {
		return x.Type
	}
	return MatcherType_EXACT
}

func (x *StringMatcher) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

type ParamMatcher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value   string      `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Type    MatcherType `protobuf:"varint,2,opt,name=type,proto3,enum=com.github.scytrin.eridanus.MatcherType" json:"type,omitempty"`
	Default string      `protobuf:"bytes,3,opt,name=default,proto3" json:"default,omitempty"`
	Key     string      `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ParamMatcher) Reset() {
	*x = ParamMatcher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eridanus_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParamMatcher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParamMatcher) ProtoMessage() {}

func (x *ParamMatcher) ProtoReflect() protoreflect.Message {
	mi := &file_eridanus_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParamMatcher.ProtoReflect.Descriptor instead.
func (*ParamMatcher) Descriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{2}
}

func (x *ParamMatcher) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *ParamMatcher) GetType() MatcherType {
	if x != nil {
		return x.Type
	}
	return MatcherType_EXACT
}

func (x *ParamMatcher) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *ParamMatcher) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type URLClassifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Class          URLClassifier_URLClass `protobuf:"varint,2,opt,name=class,proto3,enum=com.github.scytrin.eridanus.URLClassifier_URLClass" json:"class,omitempty"`
	Priority       uint64                 `protobuf:"varint,3,opt,name=priority,proto3" json:"priority,omitempty"`
	Domain         string                 `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	Path           []*StringMatcher       `protobuf:"bytes,5,rep,name=path,proto3" json:"path,omitempty"`
	Query          []*ParamMatcher        `protobuf:"bytes,6,rep,name=query,proto3" json:"query,omitempty"`
	AllowHttp      bool                   `protobuf:"varint,7,opt,name=allow_http,json=allowHttp,proto3" json:"allow_http,omitempty"`
	MatchSubdomain bool                   `protobuf:"varint,9,opt,name=match_subdomain,json=matchSubdomain,proto3" json:"match_subdomain,omitempty"` // if true, matches subdomains
	AllowSubdomain bool                   `protobuf:"varint,8,opt,name=allow_subdomain,json=allowSubdomain,proto3" json:"allow_subdomain,omitempty"` // if true, won't alter hostname in normalization
}

func (x *URLClassifier) Reset() {
	*x = URLClassifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eridanus_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLClassifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLClassifier) ProtoMessage() {}

func (x *URLClassifier) ProtoReflect() protoreflect.Message {
	mi := &file_eridanus_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLClassifier.ProtoReflect.Descriptor instead.
func (*URLClassifier) Descriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{3}
}

func (x *URLClassifier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *URLClassifier) GetClass() URLClassifier_URLClass {
	if x != nil {
		return x.Class
	}
	return URLClassifier_FILE
}

func (x *URLClassifier) GetPriority() uint64 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *URLClassifier) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *URLClassifier) GetPath() []*StringMatcher {
	if x != nil {
		return x.Path
	}
	return nil
}

func (x *URLClassifier) GetQuery() []*ParamMatcher {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *URLClassifier) GetAllowHttp() bool {
	if x != nil {
		return x.AllowHttp
	}
	return false
}

func (x *URLClassifier) GetMatchSubdomain() bool {
	if x != nil {
		return x.MatchSubdomain
	}
	return false
}

func (x *URLClassifier) GetAllowSubdomain() bool {
	if x != nil {
		return x.AllowSubdomain
	}
	return false
}

type Parser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type       Parser_ResultType   `protobuf:"varint,2,opt,name=type,proto3,enum=com.github.scytrin.eridanus.Parser_ResultType" json:"type,omitempty"`
	Operations []*Parser_Operation `protobuf:"bytes,4,rep,name=operations,proto3" json:"operations,omitempty"`
	Urls       []string            `protobuf:"bytes,3,rep,name=urls,proto3" json:"urls,omitempty"`
}

func (x *Parser) Reset() {
	*x = Parser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eridanus_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parser) ProtoMessage() {}

func (x *Parser) ProtoReflect() protoreflect.Message {
	mi := &file_eridanus_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parser.ProtoReflect.Descriptor instead.
func (*Parser) Descriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{4}
}

func (x *Parser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Parser) GetType() Parser_ResultType {
	if x != nil {
		return x.Type
	}
	return Parser_TAG
}

func (x *Parser) GetOperations() []*Parser_Operation {
	if x != nil {
		return x.Operations
	}
	return nil
}

func (x *Parser) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

type Parser_Operation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string                  `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Type  Parser_Operation_OpType `protobuf:"varint,2,opt,name=type,proto3,enum=com.github.scytrin.eridanus.Parser_Operation_OpType" json:"type,omitempty"`
}

func (x *Parser_Operation) Reset() {
	*x = Parser_Operation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eridanus_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Parser_Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Parser_Operation) ProtoMessage() {}

func (x *Parser_Operation) ProtoReflect() protoreflect.Message {
	mi := &file_eridanus_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Parser_Operation.ProtoReflect.Descriptor instead.
func (*Parser_Operation) Descriptor() ([]byte, []int) {
	return file_eridanus_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Parser_Operation) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Parser_Operation) GetType() Parser_Operation_OpType {
	if x != nil {
		return x.Type
	}
	return Parser_Operation_XPATH
}

var File_eridanus_proto protoreflect.FileDescriptor

var file_eridanus_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x79,
	0x74, 0x72, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75, 0x73, 0x22, 0xae, 0x01,
	0x0a, 0x08, 0x50, 0x42, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x07, 0x70, 0x61, 0x72,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x79, 0x74, 0x72, 0x69, 0x6e, 0x2e,
	0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x52,
	0x07, 0x70, 0x61, 0x72, 0x73, 0x65, 0x72, 0x73, 0x12, 0x44, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x79, 0x74, 0x72, 0x69, 0x6e, 0x2e, 0x65,
	0x72, 0x69, 0x64, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x55, 0x52, 0x4c, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x22, 0x7d,
	0x0a, 0x0d, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x73, 0x63, 0x79, 0x74, 0x72, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75,
	0x73, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x22, 0x8e, 0x01,
	0x0a, 0x0c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x73, 0x63, 0x79, 0x74, 0x72, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75, 0x73,
	0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xc9,
	0x03, 0x0a, 0x0d, 0x55, 0x52, 0x4c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x73, 0x63, 0x79, 0x74, 0x72, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75,
	0x73, 0x2e, 0x55, 0x52, 0x4c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2e,
	0x55, 0x52, 0x4c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x12, 0x3e, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x73,
	0x63, 0x79, 0x74, 0x72, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75, 0x73, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x3f, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x73, 0x63, 0x79, 0x74, 0x72, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75, 0x73,
	0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x68, 0x74,
	0x74, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x48,
	0x74, 0x74, 0x70, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x75, 0x62,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x27, 0x0a, 0x0f,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x73, 0x75, 0x62, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x53, 0x75, 0x62, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x33, 0x0a, 0x08, 0x55, 0x52, 0x4c, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50,
	0x4f, 0x53, 0x54, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x02, 0x12,
	0x09, 0x0a, 0x05, 0x57, 0x41, 0x54, 0x43, 0x48, 0x10, 0x03, 0x22, 0xb1, 0x03, 0x0a, 0x06, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x63, 0x79, 0x74, 0x72, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69,
	0x64, 0x61, 0x6e, 0x75, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4d, 0x0a,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x73,
	0x63, 0x79, 0x74, 0x72, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75, 0x73, 0x2e,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x75, 0x72, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73,
	0x1a, 0xa3, 0x01, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x48, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x73, 0x63, 0x79, 0x74, 0x72, 0x69, 0x6e, 0x2e, 0x65, 0x72, 0x69, 0x64, 0x61, 0x6e, 0x75, 0x73,
	0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x72, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x36,
	0x0a, 0x06, 0x4f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x58, 0x50, 0x41, 0x54,
	0x48, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x47, 0x45, 0x58, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x50, 0x52, 0x45, 0x46, 0x49, 0x58, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x55,
	0x46, 0x46, 0x49, 0x58, 0x10, 0x03, 0x22, 0x46, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x41, 0x47, 0x10, 0x00, 0x12, 0x0b, 0x0a,
	0x07, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x4f,
	0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x44, 0x35, 0x53, 0x55, 0x4d, 0x10, 0x04, 0x2a, 0x23,
	0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x58, 0x41, 0x43, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x47, 0x45,
	0x58, 0x10, 0x01, 0x42, 0x1d, 0x5a, 0x1b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x73, 0x63, 0x79, 0x74, 0x72, 0x69, 0x6e, 0x2f, 0x65, 0x72, 0x69, 0x64, 0x61, 0x6e,
	0x75, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_eridanus_proto_rawDescOnce sync.Once
	file_eridanus_proto_rawDescData = file_eridanus_proto_rawDesc
)

func file_eridanus_proto_rawDescGZIP() []byte {
	file_eridanus_proto_rawDescOnce.Do(func() {
		file_eridanus_proto_rawDescData = protoimpl.X.CompressGZIP(file_eridanus_proto_rawDescData)
	})
	return file_eridanus_proto_rawDescData
}

var file_eridanus_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_eridanus_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_eridanus_proto_goTypes = []interface{}{
	(MatcherType)(0),             // 0: com.github.scytrin.eridanus.MatcherType
	(URLClassifier_URLClass)(0),  // 1: com.github.scytrin.eridanus.URLClassifier.URLClass
	(Parser_ResultType)(0),       // 2: com.github.scytrin.eridanus.Parser.ResultType
	(Parser_Operation_OpType)(0), // 3: com.github.scytrin.eridanus.Parser.Operation.OpType
	(*PBConfig)(nil),             // 4: com.github.scytrin.eridanus.PBConfig
	(*StringMatcher)(nil),        // 5: com.github.scytrin.eridanus.StringMatcher
	(*ParamMatcher)(nil),         // 6: com.github.scytrin.eridanus.ParamMatcher
	(*URLClassifier)(nil),        // 7: com.github.scytrin.eridanus.URLClassifier
	(*Parser)(nil),               // 8: com.github.scytrin.eridanus.Parser
	(*Parser_Operation)(nil),     // 9: com.github.scytrin.eridanus.Parser.Operation
}
var file_eridanus_proto_depIdxs = []int32{
	8,  // 0: com.github.scytrin.eridanus.PBConfig.parsers:type_name -> com.github.scytrin.eridanus.Parser
	7,  // 1: com.github.scytrin.eridanus.PBConfig.classes:type_name -> com.github.scytrin.eridanus.URLClassifier
	0,  // 2: com.github.scytrin.eridanus.StringMatcher.type:type_name -> com.github.scytrin.eridanus.MatcherType
	0,  // 3: com.github.scytrin.eridanus.ParamMatcher.type:type_name -> com.github.scytrin.eridanus.MatcherType
	1,  // 4: com.github.scytrin.eridanus.URLClassifier.class:type_name -> com.github.scytrin.eridanus.URLClassifier.URLClass
	5,  // 5: com.github.scytrin.eridanus.URLClassifier.path:type_name -> com.github.scytrin.eridanus.StringMatcher
	6,  // 6: com.github.scytrin.eridanus.URLClassifier.query:type_name -> com.github.scytrin.eridanus.ParamMatcher
	2,  // 7: com.github.scytrin.eridanus.Parser.type:type_name -> com.github.scytrin.eridanus.Parser.ResultType
	9,  // 8: com.github.scytrin.eridanus.Parser.operations:type_name -> com.github.scytrin.eridanus.Parser.Operation
	3,  // 9: com.github.scytrin.eridanus.Parser.Operation.type:type_name -> com.github.scytrin.eridanus.Parser.Operation.OpType
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_eridanus_proto_init() }
func file_eridanus_proto_init() {
	if File_eridanus_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eridanus_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eridanus_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringMatcher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eridanus_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParamMatcher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eridanus_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLClassifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eridanus_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_eridanus_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Parser_Operation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eridanus_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eridanus_proto_goTypes,
		DependencyIndexes: file_eridanus_proto_depIdxs,
		EnumInfos:         file_eridanus_proto_enumTypes,
		MessageInfos:      file_eridanus_proto_msgTypes,
	}.Build()
	File_eridanus_proto = out.File
	file_eridanus_proto_rawDesc = nil
	file_eridanus_proto_goTypes = nil
	file_eridanus_proto_depIdxs = nil
}
